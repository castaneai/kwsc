//
// ハッシュテーブルを補助するモジュール
//
module Hash

	//
	// 指定した値をハッシュテーブルの末尾に追加する
	//
	procedure append(var hash[], value)
		dim len = length(hash)
		while true
			ifb hash[len, hash_exists]
				len = len + 1
			else
				break
			endif
		wend
		hash[len] = value
	fend
	
	//
	// 指定したハッシュテーブルをクリアする
	//
	procedure clear(var hash[])
		hash = hash_removeall
	fend

	//
	// ハッシュテーブルの中身をprintで出力する
	//
	procedure dump(hash[])
		for i = 0 to length(hash) - 1
			print hash[i, hash_key] + " => " + hash[i, hash_val]
		next
	fend
	//
	// ハッシュテーブルの指定したインデックスに値が存在するかどうかを返す
	//
	function index_exists(hash[], index)
		ifb length(hash) <= index
			result = false
			exit
		endif
		key = hash[index, hash_key]
		result = hash[key, hash_exists]
	fend

endmodule