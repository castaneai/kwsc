//
// .iniファイルを読み書きするモジュール
// 配列データをiniに保存、iniから読み込み　することができる
//

//
// 単体テスト
//
ifb GET_UWSC_NAME = "Ini.uws"
	call Test.uws
	call Array.uws
	call Debug.uws

	// 配列書き込みのテスト
	dim write_array[] = 1, 2, 3, true, 0, "あ"
	Ini.write_array("test_section", "write_array", write_array, "ini_test.ini")
	dim read_array = Ini.read_array("test_section", "write_array", "ini_test.ini")
		
	Test.assert_equals(true, Array.sequential_equal(write_array, read_array))
	
	// テスト用のiniを削除
	doscmd("del ini_test.ini")
endif

//
// モジュール本体
//
module Ini
	
	//
	// 配列の書き込み
	// true, falseは1, 0として書き込まれる
	//
	procedure write_array(section, key, array[], ini_filename)
		for i = 0 to length(array) - 1
			writeini(section, key + "[" + i + "]", array[i], ini_filename)
		next
	fend
	
	//
	// 配列の読み込み
	// 戻り値で配列を返すので、SAFEARRAY型となって返ってくる
	// 数値のみで表現された値は自動的に数値にキャストされる
	//
	function read_array(section, key, ini_filename)
		dim count = 0
		while true
			ifb readini(section, key + "[" + count + "]", ini_filename) = ""
				break
			endif
			count = count + 1
		wend
		
		dim result_array = safearray(0, count - 1)
		for i = 0 to count - 1
			dim value = readini(section, key + "[" + i + "]", ini_filename)
			ifb chknum(value)
				result_array[i] = val(value)
			else
				result_array[i] = value
			endif
		next

		result = result_array
	fend
	
endmodule